{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA4DA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,OAAIL,EACKI,EAAQ,CAAEN,WAAUC,aAEpBM,EAAO,CAAEP,WAAUC,Y,IA/CnBO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAIC,EAAYF,EAAIG,OAAOC,SAArBF,MACAG,EAAWL,EAAIG,OAAOC,SAApBC,KACFC,EAAaN,EAAIG,OAAOC,SAAtBE,OACJC,EAAU,CACZL,OAAQA,EAAMM,MACdH,MAAOA,EAAKG,MACZF,QAASA,EAAOE,OAElBC,QAAQC,IAAIH,GAEZ,IADA,IAAII,EAAW,EACNC,EAAI,EAAGA,GAAKL,EAAQD,OAAQM,GAAK,EAAG,CAC3CD,EAAWC,EAEX,IAAMC,EAAeN,EAAQL,MACzBY,EAAYP,EAAQL,OAASK,EAAQF,KACzCI,QAAQC,IAAI,eAAgBI,GAC5B1B,EAAcuB,EAAUE,GACrBE,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAQ0B,EAAR1B,SACjB2B,YAAW,WACTC,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCC,OAAfhC,EAAS,QAAegC,OAAT/B,EAAS,M,GAElDA,E,IAEJgC,OAAM,SAAAN,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAQ0B,EAAR1B,SAClB2B,YAAW,WACTC,EAAAhC,GAASiC,OAAOI,QACd,sBAAqCF,OAAfhC,EAAS,QAAegC,OAAT/B,EAAS,M,GAE/CA,E","sources":["src/js/03-promises.js"],"sourcesContent":["{\n  /* <form class=\"form\">\n  <label>\n    First delay (ms)\n    <input type=\"number\" name=\"delay\" required />\n  </label>\n  <label>\n    Delay step (ms)\n    <input type=\"number\" name=\"step\" required />\n  </label>\n  <label>\n    Amount\n    <input type=\"number\" name=\"amount\" required />\n  </label>\n  <button type=\"submit\">Create promises</button>\n</form>; */\n}\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', startPromise);\n\nfunction startPromise(evt) {\n  evt.preventDefault();\n\n  let { delay } = evt.target.elements;\n  const { step } = evt.target.elements;\n  const { amount } = evt.target.elements;\n  let dataObj = {\n    delay: +delay.value,\n    step: +step.value,\n    amount: +amount.value,\n  };\n  console.log(dataObj);\n  let position = 0;\n  for (let i = 1; i <= dataObj.amount; i += 1) {\n    position = i;\n\n    const initialDelay = dataObj.delay;\n    let newDelay = (dataObj.delay += dataObj.step);\n    console.log('the delay is', newDelay);\n    createPromise(position, initialDelay, newDelay)\n      .then(({ position, newDelay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${newDelay}ms`\n          );\n        }, newDelay);\n      })\n      .catch(({ position, newDelay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.warning(\n            `❌ Rejected promise ${position} in ${newDelay}ms`\n          );\n        }, newDelay);\n      });\n  }\n}\n\nfunction createPromise(position, newDelay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      return resolve({ position, newDelay });\n    } else {\n      return reject({ position, newDelay });\n    }\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","newDelay","shouldResolve","Math","random","Promise","resolve","reject","document","querySelector","addEventListener","evt","preventDefault","delay","target","elements","step","amount","dataObj","value","console","log","position1","i","initialDelay","newDelay1","then","param","setTimeout","$parcel$interopDefault","Notify","success","concat","catch","warning"],"version":3,"file":"03-promises.beb1faff.js.map"}