{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA4DA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,OAAIL,EACKI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,IA/CnBO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBACJ,IAAIX,EAAYU,EAAIE,OAAOC,SAArBb,MACAc,EAAWJ,EAAIE,OAAOC,SAApBC,KACFC,EAAaL,EAAIE,OAAOC,SAAtBE,OACJC,EAAU,CACZhB,MAAOA,EAAMiB,MACbH,KAAMA,EAAKG,MACXF,OAAQA,EAAOE,OAEjBC,QAAQC,IAAIH,GAGZ,IAFA,IAAII,EAAW,EAENC,EAAI,EAAGA,GAAKL,EAAQD,OAAQM,GAAK,EAAG,CAC3CD,EAAWC,EAEX,IAAMC,EAAeN,EAAQhB,MACbgB,EAAQhB,OAASgB,EAAQF,KAEzChB,EAAcsB,EAAUE,GACrBC,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAU0B,EAAQD,EAARC,SACjBC,YAAW,WACTC,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAf/B,EAAS,QAAe+B,OAATL,EAAS,M,GAElDA,E,IAEJM,OAAM,SAAAP,G,IAAGzB,EAAQyB,EAARzB,SAAU0B,EAAQD,EAARC,SAClBC,YAAW,WACTC,EAAA/B,GAASgC,OAAOI,QACd,sBAAqCF,OAAf/B,EAAS,QAAe+B,OAATL,EAAS,M,GAE/CA,E","sources":["src/js/03-promises.js"],"sourcesContent":["{\n  /* <form class=\"form\">\n  <label>\n    First delay (ms)\n    <input type=\"number\" name=\"delay\" required />\n  </label>\n  <label>\n    Delay step (ms)\n    <input type=\"number\" name=\"step\" required />\n  </label>\n  <label>\n    Amount\n    <input type=\"number\" name=\"amount\" required />\n  </label>\n  <button type=\"submit\">Create promises</button>\n</form>; */\n}\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', startPromise);\n\nfunction startPromise(evt) {\n  evt.preventDefault();\n  let { delay } = evt.target.elements;\n  const { step } = evt.target.elements;\n  const { amount } = evt.target.elements;\n  let dataObj = {\n    delay: delay.value,\n    step: step.value,\n    amount: amount.value,\n  };\n  console.log(dataObj);\n  let position = 0;\n\n  for (let i = 1; i <= dataObj.amount; i += 1) {\n    position = i;\n\n    const initialDelay = dataObj.delay;\n    let newDelay = (dataObj.delay += dataObj.step);\n\n    createPromise(position, initialDelay, newDelay)\n      .then(({ position, newDelay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${newDelay}ms`\n          );\n        }, newDelay);\n      })\n      .catch(({ position, newDelay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.warning(\n            `❌ Rejected promise ${position} in ${newDelay}ms`\n          );\n        }, newDelay);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      return resolve({ position, delay });\n    } else {\n      return reject({ position, delay });\n    }\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","document","querySelector","addEventListener","evt","preventDefault","target","elements","step","amount","dataObj","value","console","log","position1","i","initialDelay","then","param","newDelay","setTimeout","$parcel$interopDefault","Notify","success","concat","catch","warning"],"version":3,"file":"03-promises.d45f69ff.js.map"}