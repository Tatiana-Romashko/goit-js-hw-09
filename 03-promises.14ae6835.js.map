{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA4DA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,IACvBL,EACKI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,K,CA/CnBO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBACJ,IAAIX,MAAEA,GAAUU,EAAIE,OAAOC,SAC3B,MAAMC,KAAEA,GAASJ,EAAIE,OAAOC,UACtBE,OAAEA,GAAWL,EAAIE,OAAOC,SAC9B,IAAIG,EAAU,CACZhB,MAAOA,EAAMiB,MACbH,KAAMA,EAAKG,MACXF,OAAQA,EAAOE,OAEjBC,QAAQC,IAAIH,GACZ,IAAII,EAAW,EAEf,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAQD,OAAQM,GAAK,EAAG,CAC3CD,EAAWC,EAEX,MAAMC,EAAeN,EAAQhB,MACbgB,EAAQhB,OAASgB,EAAQF,KAEzChB,EAAcsB,EAAUE,GACrBC,MAAK,EAACxB,SAAEA,EAAQyB,SAAEA,MACjBC,YAAW,KACTC,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqB7B,QAAiByB,MAAa,GAEpDA,EAAS,IAEbK,OAAM,EAAC9B,SAAEA,EAAQyB,SAAEA,MAClBC,YAAW,KACTC,EAAA9B,GAAS+B,OAAOG,QACd,sBAAoB/B,QAAeyB,MAAa,GAEjDA,EAAS,G","sources":["src/js/03-promises.js"],"sourcesContent":["{\n  /* <form class=\"form\">\n  <label>\n    First delay (ms)\n    <input type=\"number\" name=\"delay\" required />\n  </label>\n  <label>\n    Delay step (ms)\n    <input type=\"number\" name=\"step\" required />\n  </label>\n  <label>\n    Amount\n    <input type=\"number\" name=\"amount\" required />\n  </label>\n  <button type=\"submit\">Create promises</button>\n</form>; */\n}\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', startPromise);\n\nfunction startPromise(evt) {\n  evt.preventDefault();\n  let { delay } = evt.target.elements;\n  const { step } = evt.target.elements;\n  const { amount } = evt.target.elements;\n  let dataObj = {\n    delay: delay.value,\n    step: step.value,\n    amount: amount.value,\n  };\n  console.log(dataObj);\n  let position = 0;\n\n  for (let i = 1; i <= dataObj.amount; i += 1) {\n    position = i;\n\n    const initialDelay = dataObj.delay;\n    let newDelay = (dataObj.delay += dataObj.step);\n\n    createPromise(position, initialDelay, newDelay)\n      .then(({ position, newDelay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${newDelay}ms`\n          );\n        }, newDelay);\n      })\n      .catch(({ position, newDelay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.warning(\n            `❌ Rejected promise ${position} in ${newDelay}ms`\n          );\n        }, newDelay);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      return resolve({ position, delay });\n    } else {\n      return reject({ position, delay });\n    }\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","document","querySelector","addEventListener","evt","preventDefault","target","elements","step","amount","dataObj","value","console","log","position1","i","initialDelay","then","newDelay","setTimeout","$parcel$interopDefault","Notify","success","catch","warning"],"version":3,"file":"03-promises.14ae6835.js.map"}